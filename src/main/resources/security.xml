<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Exclude some URL's from spring security. See also web.xml. -->
    <http pattern="/login" security="none"/>
    <http pattern="/logout" security="none"/>
    <http pattern="/resources/**" security="none"/>
    <http pattern="/j_security_check" security="none"/>

    <http create-session="never" use-expressions="true" auto-config="false"
          entry-point-ref="delegatingAuthenticationEntryPoint">
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <custom-filter position="PRE_AUTH_FILTER" ref="j2eePreAuthFilter"/>
        <form-login login-processing-url="/j_security_check" default-target-url="/index.html"/>
    </http>

    <global-method-security pre-post-annotations="enabled">
        <expression-handler ref="expressionHandler"/>
    </global-method-security>

    <beans:bean id="expressionHandler"
                class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <beans:property name="permissionEvaluator" ref="permissionEvaluator"/>
    </beans:bean>

    <!-- Фильтр, отвечающий за логаут. -->
    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg>
            <beans:bean class="com.somecompany.someproject.web.handlers.CustomLogoutSuccessHandler"/>
        </beans:constructor-arg>
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="preAuthenticatedProcessingFilterEntryPoint"
                class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <beans:bean id="delegatingAuthenticationEntryPoint"
                class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
        <beans:constructor-arg>
            <beans:map>
                <beans:entry key-ref="authHeaderMatcher" value-ref="preAuthenticatedProcessingFilterEntryPoint"/>
            </beans:map>
        </beans:constructor-arg>
        <beans:property name="defaultEntryPoint" ref="customBasicAuthEntryPoint"/>
    </beans:bean>

    <beans:bean id="authHeaderMatcher" class="org.springframework.security.web.util.matcher.RequestHeaderRequestMatcher">
        <beans:constructor-arg name="expectedHeaderName" value="Authorization" />
    </beans:bean>

    <beans:bean id="customBasicAuthEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <beans:property name="realmName" value="spring" />
    </beans:bean>

    <beans:bean id="j2eePreAuthFilter"
                class="org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter">
        <beans:property name="authenticationManager" ref="appControlAuthenticationManager"/>
        <beans:property name="authenticationDetailsSource">
            <beans:bean
                    class="org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource">
                <beans:property name="mappableRolesRetriever" ref="simpleMappableAttributesRetriever">

                </beans:property>
                <beans:property name="userRoles2GrantedAuthoritiesMapper">
                    <beans:bean
                            class="org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper">
                        <beans:property name="convertAttributeToUpperCase" value="true"/>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>

    <!--Настройка фильтра для события удаления сессии-->
    <beans:bean id="sessionAuthStrategy"
                class="org.springframework.security.web.session.SimpleRedirectInvalidSessionStrategy">
        <beans:constructor-arg name="invalidSessionUrl" value="/pkmslogout"/>
    </beans:bean>

    <authentication-manager alias="appControlAuthenticationManager">
        <authentication-provider ref="preAuthenticatedAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="preAuthenticatedAuthenticationProvider"
                class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <beans:property name="preAuthenticatedUserDetailsService">
            <beans:bean class="com.somecompany.someproject.security.AuthenticationUserDetailsServiceImpl"/>
        </beans:property>
    </beans:bean>

    <beans:bean id="permissionEvaluator"
                class="com.somecompany.someproject.permissions.BasePermissionEvaluator">
    </beans:bean>

</beans:beans>